#include <iostream>
using namespace std;
struct Node {
    int data;
    Node* next;

    Node(int value) : data(value), next(nullptr) {}
};

struct Queue {
    Node* front;
    Node* rear;

    Queue() : front(nullptr), rear(nullptr) {}

    ~Queue() {
        while (!isEmpty()) {
            dequeue();
        }
    }

    void enqueue(int value) {
        Node* newNode = new Node(value);
        if (isEmpty()) {
            front = rear = newNode;
        } else {
            rear->next = newNode;
            rear = newNode;
        }
    }

    void dequeue() {
        if (isEmpty()) {
            cout << "Queue is empty. Cannot dequeue." <<endl;
            return;
        }
        Node* temp = front;
        front = front->next;
        if (front == nullptr) {
            rear = nullptr; // Queue is now empty
        }
        delete temp;
    }

    int peek() {
        if (isEmpty()) {
            cout << "Queue is empty." <<endl;
            return -1; // Return a default value in case of an empty queue
        }
        return front->data;
    }

    bool isEmpty() {
        return front == nullptr;
    }

    void display() {
        if (isEmpty()) {
            cout << "Queue is empty." <<endl;
            return;
        }
        Node* current = front;
        cout << "Queue: ";
        while (current != nullptr) {
            cout << current->data << " ";
            current = current->next;
        }
        cout <<endl;
    }
};

int main() {
    Queue queue;
    int choice, value;

    while (true) {
        cout << "1. Enqueue"<< endl;
        cout << "2. Dequeue  "<< endl;
        cout << "3. Peek "<< endl;
        cout <<" 4. Display "<< endl;
        cout <<" 5. Exit" << endl;
        cout << "Enter your choice: "<< endl;;
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "Enter a value to enqueue: "<<endl;
                cin >> value;
                queue.enqueue(value);
                break;
            case 2:
                queue.dequeue();
                break;
            case 3:
            cout << "Front element: " << queue.peek() <<endl;
                break;
            case 4:
                queue.display();
                break;
            case 5:
                return 0;
            default:
                cout << "Invalid choice. Please try again." <<endl;
        }
    }
}
